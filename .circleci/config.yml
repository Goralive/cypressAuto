# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
version: 2.1
description: 
  Run your Cypress.io end-to-end browser tests without spending time configuring CircleCI.
  This orb can also record results on the Cypress Dashboard and load balance tests in parallel mode.
  If recording on the dashboard, set `CYPRESS_RECORD_KEY` as CI environment variable.

#
# See https://www.cypress.io/
#
# User workflows can use "Jobs" defined in this Orb
# Jobs can use "Commands" also defined in this Orb
# Commands run on "Executors" defined below to guarantee consistent environment
# with all dependencies installed correctly.

#
# environments (containers) for running jobs and commands
#
executors:
  default:
    description: Single Docker container with Cypress dependencies
    parameters:
      node:
        type: string
        default: '10'
        description: Version of Node 6/8/10 to use
    docker:
      - image: cypress/base:<< parameters.node >>

  # executors based on available Cypress docker images
  # see https://github.com/cypress-io/cypress-docker-images

  base-10:
    description: Single Docker container with Node 10 and Cypress dependencies
    docker:
      - image: cypress/base:10

  browsers-chrome69:
    description: Docker container with Node 10, Cypress dependencies and Chrome 69
    docker:
      - image: cypress/browsers:chrome69

#
# reusable commands
#
commands:
  #
  # individual "building blocks" commands
  #
  setup:
    parameters:
      executor:
        description: Executor to use
        type: executor
        default: base-10
      build:
        description: Optional build command(s)
        type: steps
        default: []
      yarn:
        description: Use yarn instead of npm
        type: boolean
        default: false
    steps:
      - restore_cache:
          keys:
            - cache-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
      # it would be nice to vary this command based on presence of "package-lock.json"
      # and also allow using yarn or pnpm
      - when:
          condition: << parameters.yarn >>
          steps:
            - run:
                name: 'Yarn install'
                command: 'yarn install --frozen-lockfile'
      - unless:
          condition: << parameters.yarn >>
          steps:
            - run:
                name: 'Npm CI'
                command: 'npm ci'
      - run: npx cypress verify
      # save new cache folder if needed
      - when:
          condition: << parameters.yarn >>
          steps:
            - save_cache:
                key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
                paths:
                  - ~/.cache
      - unless:
          condition: << parameters.yarn >>
          steps:
            - save_cache:
                key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
                paths:
                  - ~/.npm
                  - ~/.cache
      - steps: << parameters.build >>

  write_workspace:
    steps:
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .cache/Cypress


jobs:

  run:
    description:
      A single complete job to run Cypress end-to-end tests in your project.
      If recording on the Dashboard, set `CYPRESS_RECORD_KEY` environment variable

    parameters:
      executor:
        type: executor
        default: base-10
        description: Cypress executor to use, see [executors.md](executors.md).
  yarn:
    description: Installs NPM dependencies using "yarn install --frozen-lockfile" command
    usage:
      version: 2.1
      orbs:
        cypress: cypress-io/cypress@1.4.0
      workflows:
        build:
          jobs:
            - cypress/run:
                yarn: true